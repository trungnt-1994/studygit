diff --git a/passwdqc-1.3.0/debian/tests/control b/passwdqc-1.3.0/debian/tests/control
new file mode 100644
index 0000000..a56bab1
--- /dev/null
+++ b/passwdqc-1.3.0/debian/tests/control
@@ -0,0 +1,3 @@
+Tests: passwdqc_test
+Depends: passwdqc, libpam-passwdqc, grep
+Restrictions: needs-root
diff --git a/passwdqc-1.3.0/debian/tests/passwdqc_test b/passwdqc-1.3.0/debian/tests/passwdqc_test
new file mode 100644
index 0000000..9c94ab3
--- /dev/null
+++ b/passwdqc-1.3.0/debian/tests/passwdqc_test
@@ -0,0 +1,85 @@
+#!/bin/sh
+
+set -e
+
+#Checking for autopkgtest dir, where tests script run on
+if [ -z "$ADTTMP" ]
+then
+        echo "Required envvar \"$ADTTMP\"is not set" >&2
+        exit 1
+fi
+
+echo "===Start passwdqc==="
+
+cd $ADTTMP
+
+#Create variables to be used on tests script
+# NEW_USER-username will be created for test
+# USER_CREATE-parameter to make new user when NEW_USER existed
+# NEW_PASSWDQC-default password for passwdqc
+# NEW_USER_PASS-default password when create new user
+# NEW_UID_PASS-default password for UID
+# LOG_PASSWD-name of passwdqc log file
+# LOG_CONF-name of passwdqc configure log file
+# CHANGE_PASS_EXIST_TEXT-short text to checking tests pass or not
+NEW_USER=user_nor
+USER_CREATE=1
+NEW_PASSWDQC=Insect7battle5burn
+NEW_USER_PASS=1
+NEW_UID_PASS=123
+LOG_PASSWD=passwd_user.log
+LOG_CONF=passwdqc_configure.log
+CHANGE_PASS_EXIST_TEXT="password updated successfully"
+
+#Function to set new value of NEW_USER variable if the default value is existed
+#This value will 
+setNewUser(){
+  for user in $(cut -d: -f1 /etc/passwd) #Get only name of user on current OS
+  do
+    if [ "$user" = "$NEW_USER" ]
+    then
+      #Set new user name if user is exited
+      NEW_USER=$NEW_USER$USER_CREATE
+      #Call this function again to check or set new user
+      setNewUser
+    fi
+  done
+}
+
+setNewUser
+
+#Create new user by name $NEW_USER and password $NEW_USER_PASS
+adduser $NEW_USER --gecos "First Last,RoomNumber,WorkPhone,HomePhone" --disabled-password
+echo "$NEW_USER:$NEW_USER_PASS" | chpasswd
+
+echo "Created user: $NEW_USER"
+echo "User $NEW_USER will be deleted right now!"
+
+#Write configure pam_passwdqc.so
+#Next manage user command will check this configure to run
+sed -i '1s/^/password	requisite	pam_passwdqc.so config=\/etc\/passwdqc.conf\n/' /etc/pam.d/common-password > $LOG_CONF 2>&1
+
+#Test passwdqc by passwd command
+#Result of the command is written to $LOG_PASSWD
+passwd $NEW_USER > $LOG_PASSWD 2>&1 <<EOF
+$NEW_PASSWDQC
+$NEW_PASSWDQC
+$NEW_UID_PASS
+$NEW_UID_PASS
+EOF
+
+#Reset the configure
+#Remove configure pam_passwdqc.so
+sed -i '1d' /etc/pam.d/common-password > $LOG_CONF 2>&1
+#Remove $NEW_USER
+userdel $NEW_USER
+rm -rf /home/$NEW_USER
+
+#Reach result in log file $LOG_PASSWD
+#Test script will pass if $LOG_PASSWD contain $CHANGE_PASS_EXIST_TEXT line
+#Test script will exit with result 1 if that not contain $CHANGE_PASS_EXIST_TEXT line (Fail)
+grep -q "$CHANGE_PASS_EXIST_TEXT" $LOG_PASSWD
+
+echo "PASS"
+
+echo "===Done passwdqc==="
-- 
2.15.1

